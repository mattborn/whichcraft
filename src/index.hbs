<script>
  (function (d) {
    var config = {
      kitId: 'exf4iwe',
      scriptTimeout: 3000
    },
    h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,'')+' wf-inactive';},config.scriptTimeout),tk=d.createElement('script'),f=false,s=d.getElementsByTagName('script')[0],a;h.className+=' wf-loading';tk.src='//use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&&a!='complete'&&a!='loaded')return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
  })(document);
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.6.0/lodash.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.1/react-with-addons.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.1/JSXTransformer.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react-router/0.13.2/ReactRouter.js"></script>
<script type="text/jsx">

var Type = {
  large: 22,
  medium: 18,
  normal: 15,
  small: 13
};
var Colors = {
  white: '#fff',
  light: '#bbb',
  faint: '#eee',
  dark: '#444',
  error: '#d44'
};
var tempFrameStyles = {
  width: 395,
  height: 687,
  border: '10px solid '+ Colors.dark,
  display: 'inline-block',
  margin: '20px 0 0 20px',
  position: 'relative',
  verticalAlign: 'top'
};

var App = React.createClass({
  getInitialState: function() {
    return {
      page: 'login'
    };
  },
  render: function () {
    var style = {};
    return (
      <div style={style}>
        <Login />
      </div>
    );
  }
});

var Login = React.createClass({
  render: function () {
    var style = {
      login: { padding: '0 40px' },
      head: { padding: '80px 0' },
      logomark: {
        width: 80,
        height: 80,
        display: 'block',
        margin: '0 auto 20px'
      },
      logotype: {
        width: 160,
        height: 25
      },
      submit: {
        margin: '0 0 20px'
      },
      forgot: {
        width: '100%',
        margin: '0 0 20px',
        textAlign: 'left'
      }
    };
    _.extend(style.login, tempFrameStyles);
    return (
      <div style={style.login}>
        <div style={style.head}>
          <svg style={style.logomark} viewBox="0 0 100 96">
            <path d="M86,2h1c0.6,0,1-0.4,1-1s-0.4-1-1-1H11c-0.6,0-1,0.4-1,1s0.4,1,1,1h1C12,2,0,34,0,50c0,30,22.4,46,50,46s50-16,50-46C100,34,86,2,86,2z"/>
          </svg>
          <svg style={style.logotype} viewBox="0 0 100 10.6">
          <path d="M5.3,9.2c-0.3,0.9-0.6,1.3-1.6,1.3c-1,0-1.3-0.5-1.5-1.4L0.1,1.6C0,1.4,0,1.1,0,0.9c0-0.5,0.3-0.8,1.3-0.8
            c1,0,1.3,0.3,1.4,1.2L4,7.1l1.7-5.5c0.2-0.7,0.4-1.1,1.4-1.1c1,0,1.2,0.4,1.4,1.1l1.7,5.5l1.3-5.8c0.2-0.9,0.4-1.2,1.4-1.2
            c0.9,0,1.3,0.3,1.3,0.8c0,0.2,0,0.4-0.1,0.6l-2.1,7.6c-0.3,1-0.5,1.4-1.6,1.4c-1.1,0-1.4-0.4-1.7-1.3L7,4.1L5.3,9.2z M25,9.2
            c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1.1,0.4c-0.5,0-0.9-0.1-1.1-0.4c-0.2-0.3-0.2-0.6-0.2-1v-3h-4.2v3c0,0.4,0,0.7-0.2,1
            c-0.2,0.3-0.5,0.4-1.1,0.4c-0.5,0-0.9-0.1-1.1-0.4c-0.2-0.3-0.2-0.6-0.2-1V1.5c0-0.4,0-0.7,0.2-1c0.2-0.3,0.5-0.4,1.1-0.4
            c0.5,0,0.9,0.1,1.1,0.4c0.2,0.3,0.2,0.6,0.2,1v2.5h4.2V1.5c0-0.4,0-0.7,0.2-1c0.2-0.3,0.5-0.4,1.1-0.4c0.5,0,0.9,0.1,1.1,0.4
            C25,0.7,25,1,25,1.5V9.2z M30.1,9.2c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1.1,0.4c-0.5,0-0.9-0.1-1.1-0.4c-0.2-0.3-0.2-0.6-0.2-1V1.5
            c0-0.4,0-0.7,0.2-1c0.2-0.3,0.5-0.4,1.1-0.4c0.5,0,0.9,0.1,1.1,0.4c0.2,0.3,0.2,0.6,0.2,1V9.2z M37.3,8.4c0.4,0,0.8-0.1,1.2-0.2
            c0.5-0.2,0.8-0.4,1.1-0.4c0.6,0,1,0.8,1,1.3c0,0.4-0.3,0.7-0.7,1c-0.7,0.4-1.8,0.6-2.7,0.6c-2.9,0-5.2-1.9-5.2-5.3
            c0-3.5,2.5-5.3,5.2-5.3c1,0,2,0.2,2.7,0.6c0.5,0.3,0.7,0.6,0.7,1c0,0.5-0.3,1.3-1,1.3c-0.3,0-0.7-0.2-1.2-0.4
            c-0.4-0.2-0.8-0.3-1.3-0.3c-1.4,0-2.7,0.9-2.7,3C34.5,7.4,35.8,8.4,37.3,8.4z M51.5,9.2c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1.1,0.4
            c-0.5,0-0.9-0.1-1.1-0.4C49,9.9,49,9.6,49,9.2v-3h-4.2v3c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1.1,0.4c-0.5,0-0.9-0.1-1.1-0.4
            c-0.2-0.3-0.2-0.6-0.2-1V1.5c0-0.4,0-0.7,0.2-1c0.2-0.3,0.5-0.4,1.1-0.4c0.5,0,0.9,0.1,1.1,0.4c0.2,0.3,0.2,0.6,0.2,1v2.5H49V1.5
            c0-0.4,0-0.7,0.2-1c0.2-0.3,0.5-0.4,1.1-0.4c0.5,0,0.9,0.1,1.1,0.4c0.2,0.3,0.2,0.6,0.2,1V9.2z"/>
          <path d="M58.8,8.4c0.4,0,0.8-0.1,1.2-0.2c0.5-0.2,0.8-0.4,1.1-0.4c0.6,0,1,0.8,1,1.3c0,0.4-0.3,0.7-0.7,1
            c-0.7,0.4-1.8,0.6-2.7,0.6c-2.9,0-5.2-1.9-5.2-5.3C53.5,1.8,56,0,58.7,0c1,0,2,0.2,2.7,0.6c0.5,0.3,0.7,0.6,0.7,1
            c0,0.5-0.3,1.3-1,1.3c-0.3,0-0.7-0.2-1.2-0.4c-0.4-0.2-0.8-0.3-1.3-0.3c-1.4,0-2.7,0.9-2.7,3C56,7.4,57.3,8.4,58.8,8.4z M66.3,9.2
            c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1,0.4c-0.6,0-0.9-0.2-1-0.4c-0.2-0.3-0.2-0.6-0.2-1V1.7c0-0.5,0-1.1,0.9-1.4
            c0.4-0.1,1.1-0.2,2-0.2c0.9,0,1.8,0.1,2.7,0.5c1,0.5,1.6,1.4,1.6,2.7s-0.6,2.3-1.7,2.8l2.3,3.2c0.4,0.6,0.2,1.3-1,1.3
            c-0.9,0-1.3-0.4-1.7-1l-1.3-1.9c-0.3-0.4-0.6-0.9-0.6-0.9h-1V9.2z M66.3,4.7c0,0,0.2,0,0.4,0c1.3,0,1.9-0.4,1.9-1.3
            c0-0.9-0.7-1.2-1.6-1.2c-0.4,0-0.7,0-0.7,0V4.7z M79.7,8.1h-3.6l-0.5,1.3c-0.3,0.8-0.6,1.2-1.5,1.2c-0.8,0-1.1-0.3-1.1-0.7
            c0-0.2,0-0.3,0.2-0.6l3.3-7.9c0.3-0.7,0.6-1.2,1.5-1.2c0.9,0,1.2,0.4,1.5,1.2l3.2,7.9c0.1,0.2,0.1,0.4,0.1,0.6
            c0,0.5-0.4,0.8-1.2,0.8c-0.8,0-1.1-0.3-1.5-1.2L79.7,8.1z M76.8,6.1h2.2l-1.1-2.9L76.8,6.1z M86.6,9.2c0,0.4,0,0.7-0.2,1
            c-0.2,0.3-0.5,0.4-1,0.4c-0.5,0-0.9-0.1-1-0.4c-0.2-0.3-0.2-0.6-0.2-1V1.4c0-0.8,0.3-1.1,1.2-1.1H89c0.4,0,0.7,0,1,0.2
            c0.2,0.2,0.4,0.5,0.4,0.9c0,0.5-0.1,0.8-0.4,0.9c-0.3,0.2-0.5,0.2-1,0.2h-2.4v1.8h1.9c0.4,0,0.7,0,1,0.2c0.2,0.2,0.4,0.4,0.4,0.9
            c0,0.5-0.1,0.8-0.4,0.9c-0.3,0.2-0.5,0.2-1,0.2h-1.9V9.2z M96.9,9.2c0,0.4,0,0.7-0.2,1c-0.2,0.3-0.5,0.4-1.1,0.4
            c-0.5,0-0.9-0.1-1.1-0.4c-0.2-0.3-0.2-0.6-0.2-1V2.5h-1.7c-0.4,0-0.7,0-1-0.2c-0.2-0.2-0.4-0.5-0.4-0.9c0-0.5,0.1-0.8,0.4-0.9
            c0.3-0.2,0.5-0.2,1-0.2h6c0.4,0,0.7,0,1,0.2c0.2,0.2,0.4,0.5,0.4,0.9c0,0.5-0.1,0.8-0.4,0.9c-0.3,0.2-0.5,0.2-1,0.2h-1.7V9.2z"/>
          </svg>
        </div>
        <Input placeholder="email" treatment="thin" type="email" />
        <Input placeholder="password" treatment="thin" type="password" />
        <Button
          disabled={true}
          style={style.submit}
          text="Sign in"
          treatment="submit"
          type="submit" />
        <Link style={style.forgot} text="Forgot password" />
        <Alert text="Bummer. Wrong email or password." treatment="error" />
      </div>
    );
  }
});

var Alert = React.createClass({
  render: function () {
    var treatment = this.props.treatment || Colors.dark;
    var treatments = {
      error: Colors.error
    };
    var color = treatment ? treatments[treatment] : Colors.dark
    var style = {
      border: '1px solid '+ color,
      borderRadius: 2,
      color: color,
      lineHeight: '18px',
      padding: '6px 10px'
    };
    return <p style={_.extend(style, this.props.style)}>{this.props.text}</p>;
  }
});

var Button = React.createClass({
  render: function () {
    var disabled = this.props.disabled;
    var treatment = this.props.treatment;
    var style = {
      background: Colors.dark,
      borderRadius: 3,
      color: Colors.white,
      fontSize: Type.medium,
      lineHeight: '18px',
      padding: '11px 20px'
    };
    var treatments = {
      submit: {
        width: '100%',
        fontSize: Type.normal,
        fontWeight: 600,
        letterSpacing: '.1em',
        padding: '13px',
        textTransform: 'uppercase'
      }
    };
    if (treatment) { _.extend(style, treatments[treatment]); }
    if (disabled) { _.extend(style, {background: Colors.light}); }
    var type = this.props.type || 'button';
    return (
      <button
        disabled={disabled}
        style={_.extend(style, this.props.style)}
        type={type}
      >
        <span className="button-text">{this.props.text}</span>
      </button>
    );
  }
});

var Link = React.createClass({
  render: function () {
    var style = {
      color: Colors.light,
      textDecoration: 'underline',
      textTransform: 'lowercase'
    };
    return (
      <button
        style={_.extend(style, this.props.style)}
        type="button"
      >
        <span className="button-text">{this.props.text}</span>
      </button>
    );
  }
});

var Input = React.createClass({
  _focus: function (e) {
    e.currentTarget.style.borderColor = Colors.dark;
  },
  _blur: function (e) {
    e.currentTarget.style.borderColor = Colors.light;
  },
  render: function () {
    var style = {
      width: '100%',
      borderBottom: '1px solid '+ Colors.light,
      fontSize: Type.medium,
      margin: '0 0 20px',
      padding: '10px 0'
    };
    return <input
      onFocus={this._focus}
      onBlur={this._blur}
      placeholder={this.props.placeholder}
      style={style}
      type={this.props.type} />;
  }
});

React.render(<App />, document.body);
</script>